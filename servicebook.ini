[flask]
# debug flag for Flask. should be 0 or comment in prod
DEBUG = 1

# defines how Flask session are stored
# keep is as filesystem 
SESSION_TYPE = filesystem

[common]
# strict_update: behavior on data update
# - 0: Updates without checking the data
# - 1: Enforces If-Match headers checks on update
# should be set to 0 in production
strict_update = 0

# anonymous_access : define anonymous access rights
# - read: read-only access
# - readwrite: read and write
# - admin: read and write and admin
# Should be set to read in production
anonymous_access = readwrite

# sqluri: the database location
# format: driver://user:password@host/database
# example for mysql, notice the charset option:
#     sqluri = mysql+pymysql://root:root@0.0.0.0/book?charset=utf8mb4
# make sur the database is created with utf8mb4:
#     > CREATE DATABASE book;
#     > ALTER DATABASE book CHARACTER SET = utf8mb4;
sqluri = mysql+pymysql://book:book@0.0.0.0/book

# this is used by Flask to sign things
# set up a random secret value
secret_key = some_secret

# those two options are used by the dev server
host = 0.0.0.0
port = 5001

# this section is for sentry
[sentry]
dsn = https://<key>:<secret>@sentry.io/<project>

# search engine
[whoosh]
# the root dir for index files
path = /tmp/whoosh

# everything below defines the logging behavior
# the servicebook logger is "servicebook"
# see https://docs.python.org/3/library/logging.config.html#configuration-file-format
[loggers]
keys=root,servicebook

[handlers]
keys=consoleHandler

[formatters]
keys=simpleFormatter

[logger_root]
level=DEBUG
handlers=consoleHandler

[logger_servicebook]
level=DEBUG
handlers=consoleHandler
qualname=servicebook
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)

[formatter_simpleFormatter]
#format= %(asctime)s - %(name)s - %(levelname)s - %(message)s
#datefmt=
#class=logging.Formatter
